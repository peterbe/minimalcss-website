{"version":3,"sources":["Home.js","About.js","App.js","registerServiceWorker.js","index.js"],"names":["MINIMIZE_URL","process","DEFAULT_URL","Home","state","result","fetching","fetchingUrl","errorMessage","serverError","previousUrls","JSON","parse","window","sessionStorage","getItem","url","fetchResult","trim","Error","setState","prevState","fetch","method","body","stringify","headers","Accept","then","response","ok","json","error","beautified","cssbeautify","finalCss","indent","autosemicolon","_prettier","stylesheetContents","previousTotalSize","Object","keys","length","map","k","reduce","a","b","newTotalSize","item","savings","time","Date","getTime","previous","filter","each","unshift","setItem","status","catch","e","submitForm","event","preventDefault","newPath","props","location","pathname","encodeURIComponent","history","push","this","search","query","variable","vars","substring","split","i","pair","decodeURIComponent","getQueryVariable","prevProps","className","onSubmit","type","value","onChange","target","startsWith","replace","match","matches","matchAll","last","slice","index","placeholder","disabled","message","DisplayPreviousUrls","React","PureComponent","memo","style","textAlign","key","width","href","mseconds","suffix","formatSize","ShowSeconds","_refresh","seconds","setTimeout","dismounted","Math","floor","hours","minutes","humanizeSeconds","nextProps","DisplayErrorMessage","DisplayResult","showPrettier","copiedToClipboard","toggleShowPrettier","onClick","copy","component","ShowSizeGraph","datasets","colors","sort","random","forEach","stylesheet","label","URL","backgroundColor","stack","data","barChartData","labels","ctx","document","getElementById","getContext","Chart","options","title","display","text","tooltips","mode","intersect","callbacks","tooltipItem","yLabel","datasetIndex","legend","responsive","scales","xAxes","stacked","yAxes","ticks","callback","id","DisplayFetching","waiting","interval","setInterval","clearInterval","bytes","decimals","sizes","log","parseFloat","pow","toFixed","About","to","Component","App","navbarMenu","toggleNavbarMenu","data-target","activeClassName","exact","rel","path","NoMatch","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","reload","ReactDOM","render","origin","addEventListener","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"0ZAUMA,EAAeC,sCAEfC,EAAc,yB,IAoPLC,E,2MAzNbC,MAAQ,CACNC,OAAQ,KACRC,UAAU,EACVC,YAAa,KACbC,aAAc,KACdC,aAAa,EACbC,aAAcC,KAAKC,MACjBC,OAAOC,eAAeC,QAAQ,iBAAmB,MAEnDC,IAAKd,G,EAmBPe,YAAc,WACZ,IAAMD,EAAM,EAAKZ,MAAMY,IACvB,IAAKA,EAAIE,OACP,MAAM,IAAIC,MAAM,UASlB,OAPA,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1Bf,UAAU,EACVD,OAAQ,KACRE,YAAaS,EACbR,aAAc,KACdC,aAAa,KAERa,MAAMtB,EAAc,CACzBuB,OAAQ,OACRC,KAAMb,KAAKc,UAAU,CAAET,QACvBU,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,EAAKT,SAAS,CAAEd,UAAU,IACtBuB,EAASC,GACXD,EAASE,OAAOH,KAAK,SAAAG,GACnB,GAAIA,EAAKC,MACP,EAAKZ,SAAS,CACZZ,aAAcuB,EAAKC,MACnBvB,aAAa,QAEV,CACL,IAAMwB,EAAaC,IAAYH,EAAK1B,OAAO8B,SAAU,CACnDC,OAAQ,KAERC,eAAe,IAEjBN,EAAK1B,OAAOiC,UAAYL,EACxB,EAAKb,SACH,CACEf,OAAQ0B,EACRvB,aAAc,KACdC,aAAa,GAEf,WACE,IAAM8B,EAAqBR,EAAK1B,OAAOkC,mBACnCC,EAAoB,EACpBC,OAAOC,KAAKH,GAAoBI,SAClCH,EAAoBC,OAAOC,KAAKH,GAC7BK,IAAI,SAAAC,GACH,OAAON,EAAmBM,GAAGF,SAE9BG,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAE1B,IAAMC,EAAelB,EAAK1B,OAAO8B,SAASQ,OACpCO,EAAO,CACXlC,MACAmC,QAASX,EAAoBS,EAC7BG,MAAM,IAAIC,MAAOC,WAEbC,EAAW,EAAKnD,MAAMM,aAAa8C,OAAO,SAAAC,GAC9C,OAAOA,EAAKzC,MAAQA,IAEtBuC,EAASG,QAAQR,GACjB,EAAK9B,SAAS,CAAEV,aAAc6C,GAAY,WACxC1C,OAAOC,eAAe6C,QACpB,eACAhD,KAAKc,UAAU8B,WAQ3B,EAAKnC,SAAS,CACZZ,aAAa,kCAAD,OAAoCqB,EAAS+B,OAA7C,KACZnD,aAAa,MAIlBoD,MAAM,SAAAC,GACL,EAAK1C,SAAS,CACZZ,aAAa,oBAAD,OAAsBsD,GAClCrD,aAAa,O,EAKrBsD,WAAa,SAAAC,GACXA,EAAMC,iBACN,IAAMjD,EAAM,EAAKZ,MAAMY,IAAIE,OAC3B,GAAKF,EAAL,CAGA,IAAIkD,EAAU,EAAKC,MAAMC,SAASC,SAGlC,OAFAH,GAAO,eAAYI,mBAAmBtD,IACtC,EAAKmD,MAAMI,QAAQC,KAAKN,GACjB,EAAKjD,gB,mFA/GZ,GAAIwD,KAAKN,MAAMC,SAASM,OAAQ,CAC9B,IAAM1D,EAvCZ,SAA0B2D,EAAOC,GAE/B,IADA,IAAIC,EAAOF,EAAMG,UAAU,EAAGH,EAAMhC,QAAQoC,MAAM,KACzCC,EAAI,EAAGA,EAAIH,EAAKlC,OAAQqC,IAAK,CACpC,IAAIC,EAAOJ,EAAKG,GAAGD,MAAM,KACzB,GAAIG,mBAAmBD,EAAK,MAAQL,EAClC,OAAOM,mBAAmBD,EAAK,KAkCnBE,CAAiBV,KAAKN,MAAMC,SAASM,OAAQ,OACrD1D,GACFyD,KAAKrD,SAAS,CAAEJ,IAAKA,EAAIE,QAAUuD,KAAKxD,gB,yCAK3BmE,GACOA,EAAUhB,WAAaK,KAAKN,MAAMC,UACnCK,KAAKrE,MAAMC,QAChCoE,KAAKrD,SAAS,CAAEf,OAAQ,S,+BAsGlB,IAAD,OACDK,EAAe+D,KAAKrE,MAAMM,aAAa8C,OAAO,SAAAC,GAClD,OAAQ,EAAKrD,MAAMG,aAAe,EAAKH,MAAMG,cAAgBkD,EAAKzC,MAEpE,OACE,6BAASqE,UAAU,aACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BAEb,0BAAMC,SAAUb,KAAKV,YACnB,yBAAKsB,UAAU,oBACb,uBAAGA,UAAU,uBACX,2BACEA,UAAU,kBACVE,KAAK,MACLC,MAAOf,KAAKrE,MAAMY,IAClByE,SAAU,SAAAzB,GACR,EAAK5C,SAAS,CAAEJ,IAAKgD,EAAM0B,OAAOF,OAAS,WAEzC,GACE,EAAKpF,MAAMY,IAAI2E,WAAWzF,IAC1B,EAAKE,MAAMY,MAAQd,EAEnB,EAAKkB,SAAS,CACZJ,IAAK,EAAKZ,MAAMY,IAAI4E,QAAQ1F,EAAa,IAAIgB,cAE1C,IACJ,EAAKd,MAAMY,IAAI6E,MAAM,WAAa,IAAIlD,OAAS,EAChD,CACA,IAAMmD,EAAO,YACR,EAAK1F,MAAMY,IAAI+E,SAAS,iBAEvBC,EAAOF,EAAQA,EAAQnD,OAAS,GACtC,EAAKvB,SAAS,CACZJ,IAAK,EAAKZ,MAAMY,IAAIiF,MAAMD,EAAKE,OAAOhF,aAK9CiF,YAAW,uBAAkBjG,MAGjC,uBAAGmF,UAAU,WACX,4BACEE,KAAK,SACLF,UACEZ,KAAKrE,MAAME,SACP,sCACA,2BAEN8F,SAAU3B,KAAKrE,MAAME,UAPvB,YAgBV,yBAAK+E,UAAU,gBACb,yBAAKA,UAAU,aAEXZ,KAAKrE,MAAME,UACXmE,KAAKrE,MAAMI,cACXiE,KAAKrE,MAAMC,QACXoE,KAAKrE,MAAMM,aAAaiC,OAOtB,KALF,2BACE,8FAKH8B,KAAKrE,MAAME,SAAW,kBAAC,EAAD,MAAsB,KAC5CmE,KAAKrE,MAAMI,aACV,kBAAC,EAAD,CACE6F,QAAS5B,KAAKrE,MAAMI,aACpBC,YAAagE,KAAKrE,MAAMK,cAG1B,kBAAC,EAAD,CAAeJ,OAAQoE,KAAKrE,MAAMC,WAKxC,kBAACiG,EAAD,CAAqB5F,aAAcA,S,GApNxB6F,IAAMC,eA4NnBF,EAAsBC,IAAME,KAAK,YAAuB,IAApB/F,EAAmB,EAAnBA,aACxC,OAAKA,EAAaiC,OAIhB,yBAAK0C,UAAU,yBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,MAAMqB,MAAO,CAAEC,UAAW,SACvC,wBAAItB,UAAU,cAAd,2BACA,2BAAOA,UAAU,SACf,+BACG3E,EAAakC,IAAI,SAAAW,GAChB,OACE,wBAAIqD,IAAKrD,EAASvC,KAChB,wBAAIqE,UAAU,cAAcqB,MAAO,CAAEG,MAAO,QAC1C,uBAAGC,KAAI,gBAAWxC,mBAAmBf,EAASvC,OAC3CuC,EAASvC,MAGd,4BACE,+BACE,kBAAC,EAAD,CACE+F,UAAU,IAAI1D,MAAOC,UAAYC,EAASH,KAC1C4D,OAAO,UAIb,sCAAYC,EAAW1D,EAASJ,kBAzBzC,OAqCL+D,E,2MACJ9G,MAAQ,CACN2G,SAAU,G,EAKZI,SAAW,SAAAC,GACTvG,OAAOwG,WAAW,WACX,EAAKC,aACR,EAAKlG,SAAS,CAAE2F,SAAU,EAAK3G,MAAM2G,SAAqB,IAAVK,IAChDvG,OAAOwG,WAAW,WAChB,EAAKF,SAASC,IACH,IAAVA,KAEM,IAAVA,I,mFAGH3C,KAAK0C,SAAS,M,6CAGd1C,KAAK6C,YAAa,I,+BAEV,IACAN,EAAWvC,KAAKN,MAAhB6C,OACR,MAAM,GAAN,OA1SJ,SAAyBD,GACvB,IAAMK,EAAUG,KAAKC,MAAMT,EAAW,KAChCU,EAAQF,KAAKC,MAAMJ,EAAU,MACnC,GAAIK,EAAQ,EACV,OAAiB,IAAVA,EAAc,SAAd,UAA4BA,EAA5B,UAET,IAAMC,EAAUH,KAAKC,MAAMJ,EAAU,IACrC,OAAIM,EAAU,EACO,IAAZA,EAAgB,WAAhB,UAAgCA,EAAhC,YAEF,UAgSKC,CAAgBlD,KAAKrE,MAAM2G,UAArC,YAAkDC,M,gDArBpBY,EAAWvG,GACzC,MAAO,CAAE0F,SAAUa,EAAUb,c,GALPR,IAAMC,eA6B1BqB,E,iLAEF,OACE,yBAAKxC,UAAU,OACb,wBAAIA,UAAU,SACXZ,KAAKN,MAAM1D,YACR,uBACA,sBAEJgE,KAAKN,MAAM1D,YAKT,KAJF,yBAAK4E,UAAU,2BAAf,kBACiB,mDADjB,oEAKF,yBAAKA,UAAU,0BACb,6BAAMZ,KAAKN,MAAMkC,e,GAhBOE,IAAMC,eAuBlCsB,E,2MACJ1H,MAAQ,CAAE2H,cAAc,EAAOC,mBAAmB,G,EAKlDC,mBAAqB,SAAAjE,GACnB,EAAK5C,SAAS,SAAAC,GAAS,MAAK,CAC1B0G,cAAe1G,EAAU0G,iB,sFAL3BtD,KAAK6C,YAAa,I,+BASV,IAAD,OACCjH,EAAWoE,KAAKN,MAAhB9D,OACR,GAAe,OAAXA,EACF,OAAO,KAET,GAAIA,EAAO2B,MACT,OACE,yBAAKqD,UAAU,OACb,wBAAIA,UAAU,SAAd,YACA,yBAAKA,UAAU,0BACb,6BAAMhF,EAAO2B,SAKrB,IAAMO,EAAqBlC,EAAOA,OAAOkC,mBACrCC,EAAoB,EACpBC,OAAOC,KAAKH,GAAoBI,SAClCH,EAAoBC,OAAOC,KAAKH,GAC7BK,IAAI,SAAAC,GACH,OAAON,EAAmBM,GAAGF,SAE9BG,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAE1B,IAAMC,EAAe5C,EAAOA,OAAO8B,SAASQ,OAE5C,OACE,yBAAK0C,UAAU,MAAMqB,MAAO,CAAEC,UAAW,SACvC,wBAAItB,UAAU,cAAd,WAEA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,4BACEE,KAAK,SACLF,UAAU,oBACV6C,QAASzD,KAAKwD,mBACd7B,UAAW3B,KAAKrE,MAAM2H,cAJxB,WAQA,4BACExC,KAAK,SACLF,UAAU,oBACV6C,QAASzD,KAAKwD,mBACd7B,SAAU3B,KAAKrE,MAAM2H,cAJvB,gBAWJ,yBAAK1C,UAAU,eACb,uBAAGA,UAAU,cACX,4BACEA,UAAU,SACV6C,QAAS,SAAAlE,GACH,EAAK5D,MAAM2H,aACbI,IAAK9H,EAAOA,OAAOiC,WAEnB6F,IAAK9H,EAAOA,OAAO8B,UAErB,EAAKf,SAAS,CAAE4G,mBAAmB,GAAQ,WACzCnH,OAAOwG,WAAW,WACX,EAAKC,YACR,EAAKlG,SAAS,CAAE4G,mBAAmB,KAEpC,SAINvD,KAAKrE,MAAM4H,kBACR,sBACA,wBAOZ,kBAAC,IAAD,CAAWI,UAAU,MAAM/C,UAAU,gBAClCZ,KAAKrE,MAAM2H,aACR1H,EAAOA,OAAOiC,UACdjC,EAAOA,OAAO8B,UAGpB,yBAAKkD,UAAU,uBACb,yBAAKA,UAAU,gCACb,6BACE,uBAAGA,UAAU,WAAb,uBACA,uBAAGA,UAAU,SAAS4B,EAAWzE,MAGrC,yBAAK6C,UAAU,gCACb,6BACE,uBAAGA,UAAU,WAAb,kBACA,uBAAGA,UAAU,SAAS4B,EAAWhE,MAGrC,yBAAKoC,UAAU,gCACb,6BACE,uBAAGA,UAAU,WAAb,kBACA,uBAAGA,UAAU,SACV4B,EAAWzE,EAAoBS,OAwCxC,yBAAKoC,UAAU,WACb,wBAAIA,UAAU,cAAd,eACA,2BAAOA,UAAU,SACf,+BACG5C,OAAOC,KAAKH,GAAoBK,IAAI,SAAA5B,GACnC,OACE,wBAAI4F,IAAK5F,GACP,4BACE,uBAAG8F,KAAM9F,GAAMA,IAEjB,wBAAI0F,MAAO,CAAEC,UAAW,UACtB,2BAAIM,EAAW1E,EAAmBvB,GAAK2B,gBASrD,yBAAK0C,UAAU,WACb,wBAAIA,UAAU,cAAd,eACA,kBAAC,EAAD,CACEpC,aAAcA,EACdV,mBAAoBA,U,GAnLJgE,IAAMC,eAkM5B6B,E,4LACiB,IAAD,OACZC,EAAW,GACXC,EAAsB,CAC1B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAvC0BC,KAAK,kBAAMjB,KAAKkB,SAAW,KA0CnDzD,EAAI,EACRvC,OAAOC,KAAK+B,KAAKN,MAAM5B,oBAAoBmG,QAAQ,SAAAC,GAzCjC,IAAA3H,EA0ChBsH,EAAS9D,KAAK,CACZoE,OA3Cc5H,EA2CO2H,EA1CjB,IAAIE,IAAI7H,GACTqD,UA0CHyE,gBAAiBP,EAAOvD,KACxB+D,MAAO,SACPC,KAAM,CAAC,EAAK7E,MAAM5B,mBAAmBoG,GAAYhG,OAAQ,OAG7D2F,EAAS9D,KAAK,CACZoE,MAAO,UACPE,gBAAiBP,EAAO,GACxBQ,MAAO,QACPC,KAAM,CAAC,EAAGvE,KAAKN,MAAMlB,gBAGvB,IAAMgG,EAAe,CACnBC,OAAQ,CAAC,SAAU,SACnBZ,SAAUA,GAGNa,EAAMC,SAASC,eAAe,aAAaC,WAAW,MAC5D,IAAIC,IAAMJ,EAAK,CACb5D,KAAM,MACNyD,KAAMC,EACNO,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,KAAM,8CAERC,SAAU,CACRF,SAAS,EACTG,KAAM,QACNC,WAAW,EACXC,UAAW,CACTnB,MAAO,SAASoB,EAAahB,GAC3B,GAA2B,IAAvBgB,EAAYC,OACd,OAAO,KAET,IAAIrB,EAAQI,EAAKV,SAAS0B,EAAYE,cAActB,OAAS,GAK7D,OAJIA,IACFA,GAAS,MAEXA,GAAS3B,EAAW+C,EAAYC,OAAQ,GACjCrB,KAIbuB,OAAQ,CACNT,SAAS,GAEXU,YAAY,EACZC,OAAQ,CACNC,MAAO,CACL,CACEC,SAAS,IAGbC,MAAO,CACL,CACED,SAAS,EACTE,MAAO,CACLC,SAAU,SAAA9B,GAAK,OAAI3B,EAAW2B,EAAO,a,+BASjD,OAAO,4BAAQ+B,GAAG,kB,GA1GMpE,IAAMC,eA8G5BoE,E,2MACJxK,MAAQ,CAAEyK,QAAS,G,mFACE,IAAD,OAClBpG,KAAKqG,SAAWC,YAAY,WACtB,EAAKzD,YAET,EAAKlG,SAAS,SAAAC,GAAS,MAAK,CAC1BwJ,QAASxJ,EAAUwJ,QAAU,MAE9B,O,6CAGHpG,KAAK6C,YAAa,EACd7C,KAAKqG,UACPE,cAAcvG,KAAKqG,Y,+BAKrB,OAAIrG,KAAKrE,MAAMyK,QAAU,EAChB,KAGP,yBAAKxF,UAAU,OACb,0CACA,+CAAqBZ,KAAKrE,MAAMyK,QAAhC,iB,GAzBsBtE,IAAMC,eAuC9BS,EAAa,SAACgE,GAAyB,IAAlBC,EAAiB,uDAAN,EACpC,IAAKD,EAAO,MAAO,UACnB,IAAMpI,EAAI,KACJsI,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5DnG,EAAIuC,KAAKC,MAAMD,KAAK6D,IAAIH,GAAS1D,KAAK6D,IAAIvI,IAChD,OACEwI,YAAYJ,EAAQ1D,KAAK+D,IAAIzI,EAAGmC,IAAIuG,QAAQL,IAAa,IAAMC,EAAMnG,ICnpB1DwG,E,iLAlCX,OACE,yBAAKnG,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,2BAAd,SACQ,6CAER,yBAAKA,UAAU,OACb,6EAEE,uBAAGyB,KAAK,4CACN,4CADF,iBAFF,KAMA,+CACmB,4CADnB,yKAKE,6BALF,kFAOmB,4CAPnB,aASA,4BACE,kBAAC,IAAD,CAAM2E,GAAG,KAAT,yB,GA1BIlF,IAAMmF,WCiIXC,E,2MAvHbvL,MAAQ,CACNwL,YAAY,G,EAGdC,iBAAmB,SAAA7H,GACjBA,EAAMC,iBACN,EAAK7C,SAAS,CAAEwK,YAAa,EAAKxL,MAAMwL,c,wEAIxC,OACE,kBAAC,IAAD,KACE,6BACE,6BAASvG,UAAU,8BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAASA,UAAU,cAAcoG,GAAG,KAClC,8CAIJ,0BACEvD,QAASzD,KAAKoH,iBACdxG,UACEZ,KAAKrE,MAAMwL,WACP,iCACA,uBAENE,cAAY,cAEZ,+BACA,+BACA,iCAGJ,yBACEnB,GAAG,aACHtF,UACEZ,KAAKrE,MAAMwL,WACP,wBACA,eAGN,yBAAKvG,UAAU,cACb,kBAAC,IAAD,CACEoG,GAAG,IACHpG,UAAU,cACV0G,gBAAgB,YAChBC,OAAO,GAJT,QAQA,kBAAC,IAAD,CACEP,GAAG,SACHpG,UAAU,cACV0G,gBAAgB,aAHlB,oBAOA,0BAAM1G,UAAU,eACd,uBACEA,UAAU,uCACVK,OAAO,SACPuG,IAAI,sBACJnF,KAAK,iDAKL,qDAShB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoF,KAAK,IAAIF,OAAK,EAAC5D,UAAWjI,IACjC,kBAAC,IAAD,CAAO+L,KAAK,SAAS9D,UAAWoD,IAChC,kBAAC,IAAD,CAAOpD,UAAW+D,KAGpB,4BAAQ9G,UAAU,UAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,2BACE,uBAAGyB,KAAK,iDAAR,sBAEK,IAHP,OAIO,IACL,uBAAGA,KAAK,gDAAR,qBAEK,IAPP,aAQa,IACX,uBAAGA,KAAK,yCAAR,cAA+D,IATjE,MAUK,uBAAGA,KAAK,2BAAR,YAVL,OAUwD,IACtD,uBAAGA,KAAK,qCAAR,kBAXF,KAcA,6CACiB,uBAAGA,KAAK,qBAAR,SADjB,OAC2D,IACzD,uBAAGA,KAAK,yCAAR,6B,GA3GAP,IAAMmF,WA0HxB,SAASS,EAAT,GAAgC,IAAb/H,EAAY,EAAZA,SACjB,OACE,6BACE,4CACe,8BAAOA,EAASC,Y,UChI/B+H,EAAcC,QACW,cAA7BxL,OAAOuD,SAASkI,UAEe,UAA7BzL,OAAOuD,SAASkI,UAEhBzL,OAAOuD,SAASkI,SAASzG,MACvB,2DAsCN,SAAS0G,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT5K,KAAK,SAAAgL,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1M,QACfqM,UAAUC,cAAcO,YAM1BC,QAAQ9B,IAAI,+CACZvK,OAAOuD,SAAS+I,UAKhBD,QAAQ9B,IAAI,2CAMrBvH,MAAM,SAAA7B,GACLkL,QAAQlL,MAAM,4CAA6CA,KC1EjEoL,IAASC,OAAO,kBAAC,EAAD,MAASjE,SAASC,eAAe,SDalC,WACb,GAA6C,kBAAmBoD,UAAW,CAGzE,GADkB,IAAI5D,IAAI5I,GAAwBY,OAAOuD,UAC3CkJ,SAAWzM,OAAOuD,SAASkJ,OAIvC,OAGFzM,OAAO0M,iBAAiB,OAAQ,WAC9B,IAAMf,EAAK,UAAMvM,GAAN,sBAEPmM,IAmDV,SAAiCI,GAE/BlL,MAAMkL,GACH5K,KAAK,SAAAC,GAGkB,MAApBA,EAAS+B,SACuD,IAAhE/B,EAASH,QAAQ8L,IAAI,gBAAgBC,QAAQ,cAG7ChB,UAAUC,cAAcgB,MAAM9L,KAAK,SAAAgL,GACjCA,EAAae,aAAa/L,KAAK,WAC7Bf,OAAOuD,SAAS+I,aAKpBZ,EAAgBC,KAGnB3I,MAAM,WACLqJ,QAAQ9B,IACN,mEAvEAwC,CAAwBpB,GAIxBC,UAAUC,cAAcgB,MAAM9L,KAAK,WACjCsL,QAAQ9B,IACN,+GAMJmB,EAAgBC,MCxCxBqB,K","file":"static/js/main.d3e9a921.chunk.js","sourcesContent":["import React from \"react\";\nimport PrismCode from \"react-prism\";\n// eslint-disable-next-line\nimport { Prism } from \"prismjs\";\nimport Chart from \"chart.js\";\nimport \"./Home.css\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport cssbeautify from \"cssbeautify\";\nimport copy from \"copy-to-clipboard\";\n\nconst MINIMIZE_URL = process.env.REACT_APP_ABSOLUTE_API_URL || \"/minimize\";\n\nconst DEFAULT_URL = \"https://minimalcss.app\";\n\nfunction getQueryVariable(query, variable) {\n  var vars = query.substring(1, query.length).split(\"&\");\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split(\"=\");\n    if (decodeURIComponent(pair[0]) === variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n}\n\nfunction humanizeSeconds(mseconds) {\n  const seconds = Math.floor(mseconds / 1000);\n  const hours = Math.floor(seconds / 3600);\n  if (hours > 0) {\n    return hours === 1 ? \"1 hour\" : `${hours} hours`;\n  }\n  const minutes = Math.floor(seconds / 60);\n  if (minutes > 0) {\n    return minutes === 1 ? \"1 minute\" : `${minutes} minutes`;\n  }\n  return \"seconds\";\n  // return minutes === 1 ? \"1 second\" : `${seconds} seconds`;\n}\n\nclass Home extends React.PureComponent {\n  state = {\n    result: null,\n    fetching: false,\n    fetchingUrl: null,\n    errorMessage: null,\n    serverError: false,\n    previousUrls: JSON.parse(\n      window.sessionStorage.getItem(\"previousUrls\") || \"[]\"\n    ),\n    url: DEFAULT_URL\n  };\n\n  componentDidMount() {\n    if (this.props.location.search) {\n      const url = getQueryVariable(this.props.location.search, \"url\");\n      if (url) {\n        this.setState({ url: url.trim() }, this.fetchResult);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const locationChanged = prevProps.location !== this.props.location;\n    if (locationChanged && this.state.result) {\n      this.setState({ result: null });\n    }\n  }\n\n  fetchResult = () => {\n    const url = this.state.url;\n    if (!url.trim()) {\n      throw new Error(\"no url\");\n    }\n    this.setState(prevState => ({\n      fetching: true,\n      result: null,\n      fetchingUrl: url,\n      errorMessage: null,\n      serverError: false\n    }));\n    return fetch(MINIMIZE_URL, {\n      method: \"POST\",\n      body: JSON.stringify({ url }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => {\n        this.setState({ fetching: false });\n        if (response.ok) {\n          response.json().then(json => {\n            if (json.error) {\n              this.setState({\n                errorMessage: json.error,\n                serverError: false\n              });\n            } else {\n              const beautified = cssbeautify(json.result.finalCss, {\n                indent: \"  \",\n                // openbrace: \"separate-line\",\n                autosemicolon: true\n              });\n              json.result._prettier = beautified;\n              this.setState(\n                {\n                  result: json,\n                  errorMessage: null,\n                  serverError: false\n                },\n                () => {\n                  const stylesheetContents = json.result.stylesheetContents;\n                  let previousTotalSize = 0;\n                  if (Object.keys(stylesheetContents).length) {\n                    previousTotalSize = Object.keys(stylesheetContents)\n                      .map(k => {\n                        return stylesheetContents[k].length;\n                      })\n                      .reduce((a, b) => a + b);\n                  }\n                  const newTotalSize = json.result.finalCss.length;\n                  const item = {\n                    url,\n                    savings: previousTotalSize - newTotalSize,\n                    time: new Date().getTime()\n                  };\n                  const previous = this.state.previousUrls.filter(each => {\n                    return each.url !== url;\n                  });\n                  previous.unshift(item);\n                  this.setState({ previousUrls: previous }, () => {\n                    window.sessionStorage.setItem(\n                      \"previousUrls\",\n                      JSON.stringify(previous)\n                    );\n                  });\n                }\n              );\n            }\n          });\n        } else {\n          this.setState({\n            errorMessage: `Server request failure (status=${response.status})`,\n            serverError: false\n          });\n        }\n      })\n      .catch(e => {\n        this.setState({\n          errorMessage: `API call failed: ${e}`,\n          serverError: true\n        });\n      });\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    const url = this.state.url.trim();\n    if (!url) {\n      return;\n    }\n    let newPath = this.props.location.pathname;\n    newPath += `?url=${encodeURIComponent(url)}`;\n    this.props.history.push(newPath);\n    return this.fetchResult();\n  };\n  render() {\n    const previousUrls = this.state.previousUrls.filter(each => {\n      return !this.state.fetchingUrl || this.state.fetchingUrl !== each.url;\n    });\n    return (\n      <section className=\"hero home\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            {/* <p>Enter the URL of a site that has a lot of CSS</p> */}\n            <form onSubmit={this.submitForm}>\n              <div className=\"field is-grouped\">\n                <p className=\"control is-expanded\">\n                  <input\n                    className=\"input is-medium\"\n                    type=\"url\"\n                    value={this.state.url}\n                    onChange={event => {\n                      this.setState({ url: event.target.value }, () => {\n                        // Did you accidentally paste in after the default value\n                        if (\n                          this.state.url.startsWith(DEFAULT_URL) &&\n                          this.state.url !== DEFAULT_URL\n                        ) {\n                          this.setState({\n                            url: this.state.url.replace(DEFAULT_URL, \"\").trim()\n                          });\n                        } else if (\n                          (this.state.url.match(/:\\/\\//g) || []).length > 1\n                        ) {\n                          const matches = [\n                            ...this.state.url.matchAll(/http?s:\\/\\//g)\n                          ];\n                          const last = matches[matches.length - 1];\n                          this.setState({\n                            url: this.state.url.slice(last.index).trim()\n                          });\n                        }\n                      });\n                    }}\n                    placeholder={`For example. ${DEFAULT_URL}`}\n                  />\n                </p>\n                <p className=\"control\">\n                  <button\n                    type=\"submit\"\n                    className={\n                      this.state.fetching\n                        ? \"button is-info is-medium is-loading\"\n                        : \"button is-info is-medium\"\n                    }\n                    disabled={this.state.fetching}\n                  >\n                    Go!\n                  </button>\n                </p>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"section main\">\n          <div className=\"container\">\n            {!(\n              this.state.fetching ||\n              this.state.errorMessage ||\n              this.state.result ||\n              this.state.previousUrls.length\n            ) ? (\n              <p>\n                <i>\n                  Waiting for you to submit a URL above to show some cool stuff.\n                </i>\n              </p>\n            ) : null}\n            {this.state.fetching ? <DisplayFetching /> : null}\n            {this.state.errorMessage ? (\n              <DisplayErrorMessage\n                message={this.state.errorMessage}\n                serverError={this.state.serverError}\n              />\n            ) : (\n              <DisplayResult result={this.state.result} />\n            )}\n          </div>\n        </div>\n\n        <DisplayPreviousUrls previousUrls={previousUrls} />\n      </section>\n    );\n  }\n}\n\nexport default Home;\n\nconst DisplayPreviousUrls = React.memo(({ previousUrls }) => {\n  if (!previousUrls.length) {\n    return null;\n  }\n  return (\n    <div className=\"section previous-urls\">\n      <div className=\"container\">\n        <div className=\"box\" style={{ textAlign: \"left\" }}>\n          <h4 className=\"title is-3\">Previous URLs Submitted</h4>\n          <table className=\"table\">\n            <tbody>\n              {previousUrls.map(previous => {\n                return (\n                  <tr key={previous.url}>\n                    <td className=\"overflowing\" style={{ width: \"70%\" }}>\n                      <a href={`/?url=${encodeURIComponent(previous.url)}`}>\n                        {previous.url}\n                      </a>\n                    </td>\n                    <td>\n                      <small>\n                        <ShowSeconds\n                          mseconds={new Date().getTime() - previous.time}\n                          suffix=\"ago\"\n                        />\n                      </small>\n                    </td>\n                    <td>Saving {formatSize(previous.savings)}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nclass ShowSeconds extends React.PureComponent {\n  state = {\n    mseconds: 0\n  };\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return { mseconds: nextProps.mseconds };\n  }\n  _refresh = seconds => {\n    window.setTimeout(() => {\n      if (!this.dismounted) {\n        this.setState({ mseconds: this.state.mseconds + seconds * 1000 });\n        window.setTimeout(() => {\n          this._refresh(seconds);\n        }, seconds * 1000);\n      }\n    }, seconds * 1000);\n  };\n  componentDidMount() {\n    this._refresh(10);\n  }\n  componentWillUnmount() {\n    this.dismounted = true;\n  }\n  render() {\n    const { suffix } = this.props;\n    return `${humanizeSeconds(this.state.mseconds)} ${suffix}`;\n  }\n}\n\nclass DisplayErrorMessage extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"box\">\n        <h3 className=\"title\">\n          {this.props.serverError\n            ? \"Server Request Error\"\n            : \"Minimization Error\"}\n        </h3>\n        {!this.props.serverError ? (\n          <div className=\"notification is-warning\">\n            The request to <code>minimalcss-server</code> worked but the actual\n            minimization work failed for some reason.\n          </div>\n        ) : null}\n        <div className=\"notification is-danger\">\n          <pre>{this.props.message}</pre>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass DisplayResult extends React.PureComponent {\n  state = { showPrettier: false, copiedToClipboard: false };\n  componentWillUnmount() {\n    this.dismounted = true;\n  }\n\n  toggleShowPrettier = event => {\n    this.setState(prevState => ({\n      showPrettier: !prevState.showPrettier\n    }));\n  };\n\n  render() {\n    const { result } = this.props;\n    if (result === null) {\n      return null;\n    }\n    if (result.error) {\n      return (\n        <div className=\"box\">\n          <h3 className=\"title\">Error...</h3>\n          <div className=\"notification is-danger\">\n            <pre>{result.error}</pre>\n          </div>\n        </div>\n      );\n    }\n    const stylesheetContents = result.result.stylesheetContents;\n    let previousTotalSize = 0;\n    if (Object.keys(stylesheetContents).length) {\n      previousTotalSize = Object.keys(stylesheetContents)\n        .map(k => {\n          return stylesheetContents[k].length;\n        })\n        .reduce((a, b) => a + b);\n    }\n    const newTotalSize = result.result.finalCss.length;\n\n    return (\n      <div className=\"box\" style={{ textAlign: \"left\" }}>\n        <h3 className=\"title is-3\">Results</h3>\n\n        <nav className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <button\n                type=\"button\"\n                className=\"button is-rounded\"\n                onClick={this.toggleShowPrettier}\n                disabled={!this.state.showPrettier}\n              >\n                Raw CSS\n              </button>\n              <button\n                type=\"button\"\n                className=\"button is-rounded\"\n                onClick={this.toggleShowPrettier}\n                disabled={this.state.showPrettier}\n              >\n                Pretty CSS\n              </button>\n            </div>\n          </div>\n\n          <div className=\"level-right\">\n            <p className=\"level-item\">\n              <button\n                className=\"button\"\n                onClick={event => {\n                  if (this.state.showPrettier) {\n                    copy(result.result._prettier);\n                  } else {\n                    copy(result.result.finalCss);\n                  }\n                  this.setState({ copiedToClipboard: true }, () => {\n                    window.setTimeout(() => {\n                      if (!this.dismounted) {\n                        this.setState({ copiedToClipboard: false });\n                      }\n                    }, 3000);\n                  });\n                }}\n              >\n                {this.state.copiedToClipboard\n                  ? \"Copied to clipboard\"\n                  : \"Copy to clipboard\"}\n              </button>\n            </p>\n          </div>\n        </nav>\n\n        {/* XXX this is ugly */}\n        <PrismCode component=\"pre\" className=\"language-css\">\n          {this.state.showPrettier\n            ? result.result._prettier\n            : result.result.finalCss}\n        </PrismCode>\n\n        <nav className=\"level results-level\">\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">Total size (before)</p>\n              <p className=\"title\">{formatSize(previousTotalSize)}</p>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">Size (minimal)</p>\n              <p className=\"title\">{formatSize(newTotalSize)}</p>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">Size reduction</p>\n              <p className=\"title\">\n                {formatSize(previousTotalSize - newTotalSize)}\n              </p>\n            </div>\n          </div>\n        </nav>\n        {/* <p>\n          <small>\n            Took {formatTime(result.result._took)}\n            </small>\n          </p> */}\n\n        {/* <div className=\"content\">\n          <table className=\"table\">\n            <tbody>\n              <tr>\n                <th>Took</th>\n                <td>{formatTime(result.result._took)}</td>\n              </tr>\n              <tr>\n                <th>Size (minimal)</th>\n                <td>\n                  <strong>{formatSize(newTotalSize)}</strong>\n                </td>\n              </tr>\n              <tr>\n                <th>Total size (before)</th>\n                <td>{formatSize(previousTotalSize)}</td>\n              </tr>\n              <tr>\n                <th>Size reduction</th>\n                <td>\n                  <strong>\n                    {formatSize(previousTotalSize - newTotalSize)}\n                  </strong>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div> */}\n\n        <div className=\"content\">\n          <h4 className=\"title is-4\">Stylesheets</h4>\n          <table className=\"table\">\n            <tbody>\n              {Object.keys(stylesheetContents).map(url => {\n                return (\n                  <tr key={url}>\n                    <td>\n                      <a href={url}>{url}</a>\n                    </td>\n                    <td style={{ textAlign: \"right\" }}>\n                      <b>{formatSize(stylesheetContents[url].length)}</b>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"content\">\n          <h4 className=\"title is-4\">Graphically</h4>\n          <ShowSizeGraph\n            newTotalSize={newTotalSize}\n            stylesheetContents={stylesheetContents}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst shuffleArray = arr => arr.sort(() => Math.random() - 0.5);\n\nconst urlToPathname = url => {\n  const u = new URL(url);\n  return u.pathname;\n};\n\nclass ShowSizeGraph extends React.PureComponent {\n  componentDidMount() {\n    const datasets = [];\n    const colors = shuffleArray([\n      \"#ff0029\",\n      \"#377eb8\",\n      \"#66a61e\",\n      \"#984ea3\",\n      \"#00d2d5\",\n      \"#ff7f00\",\n      \"#af8d00\",\n      \"#7f80cd\",\n      \"#b3e900\",\n      \"#c42e60\",\n      \"#a65628\",\n      \"#f781bf\",\n      \"#8dd3c7\",\n      \"#bebada\",\n      \"#fb8072\",\n      \"#80b1d3\",\n      \"#fdb462\",\n      \"#fccde5\",\n      \"#bc80bd\",\n      \"#ffed6f\",\n      \"#c4eaff\",\n      \"#cf8c00\",\n      \"#1b9e77\",\n      \"#d95f02\",\n      \"#e7298a\",\n      \"#e6ab02\",\n      \"#a6761d\",\n      \"#0097ff\",\n      \"#00d067\"\n    ]);\n\n    let i = 1;\n    Object.keys(this.props.stylesheetContents).forEach(stylesheet => {\n      datasets.push({\n        label: urlToPathname(stylesheet),\n        backgroundColor: colors[i++],\n        stack: \"Before\",\n        data: [this.props.stylesheetContents[stylesheet].length, 0]\n      });\n    });\n    datasets.push({\n      label: \"minimal\",\n      backgroundColor: colors[0],\n      stack: \"After\",\n      data: [0, this.props.newTotalSize]\n    });\n\n    const barChartData = {\n      labels: [\"Before\", \"After\"],\n      datasets: datasets\n    };\n\n    const ctx = document.getElementById(\"sizegraph\").getContext(\"2d\");\n    new Chart(ctx, {\n      type: \"bar\",\n      data: barChartData,\n      options: {\n        title: {\n          display: true,\n          text: \"Smaller bar(s) means less downloading time\"\n        },\n        tooltips: {\n          display: false,\n          mode: \"index\",\n          intersect: false,\n          callbacks: {\n            label: function(tooltipItem, data) {\n              if (tooltipItem.yLabel === 0) {\n                return null;\n              }\n              var label = data.datasets[tooltipItem.datasetIndex].label || \"\";\n              if (label) {\n                label += \": \";\n              }\n              label += formatSize(tooltipItem.yLabel, 0);\n              return label;\n            }\n          }\n        },\n        legend: {\n          display: false\n        },\n        responsive: true,\n        scales: {\n          xAxes: [\n            {\n              stacked: true\n            }\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                callback: label => formatSize(label, 0)\n              }\n            }\n          ]\n        }\n      }\n    });\n  }\n  render() {\n    return <canvas id=\"sizegraph\" />;\n  }\n}\n\nclass DisplayFetching extends React.PureComponent {\n  state = { waiting: 0 };\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      if (this.dismounted) return;\n\n      this.setState(prevState => ({\n        waiting: prevState.waiting + 1\n      }));\n    }, 1000);\n  }\n  componentWillUnmount() {\n    this.dismounted = true;\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    if (this.state.waiting < 1) {\n      return null;\n    }\n    return (\n      <div className=\"box\">\n        <p>Fetching...</p>\n        <p>Been waiting for {this.state.waiting} seconds</p>\n      </div>\n    );\n  }\n}\n\n// function formatTime(ms) {\n//   if (ms > 1000) {\n//     const s = ms / 1000;\n//     return `${s.toFixed(2)} seconds`;\n//   }\n//   return `${ms.toFixed(2)} milliseconds`;\n// }\n\nconst formatSize = (bytes, decimals = 1) => {\n  if (!bytes) return \"0 bytes\";\n  const k = 1024;\n  const sizes = [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimals)) + \" \" + sizes[i]\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"column is-6 is-offset-3\">\n            <h1 className=\"title has-text-centered\">\n              About <code>minimalcss</code>\n            </h1>\n            <div className=\"box\">\n              <p>\n                This is a online version that lets your try the\n                <a href=\"https://www.npmjs.com/package/minimalcss\">\n                  <code>minimalcss</code> node package\n                </a>.\n              </p>\n              <p>\n                Normally you use <code>minimalcss</code> in your server,\n                continous integration or command line tooling to let it extract\n                the minimal CSS a page/URL/site uses but this site let's you try\n                it from the browser.\n                <br />\n                Consider everything here experimental and this web app is not\n                part of the core <code>minimalcss</code> project.\n              </p>\n              <h3>\n                <Link to=\"/\">Go back Home</Link>\n              </h3>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport About from \"./About\";\n\nclass App extends React.Component {\n  state = {\n    navbarMenu: false\n  };\n\n  toggleNavbarMenu = event => {\n    event.preventDefault();\n    this.setState({ navbarMenu: !this.state.navbarMenu });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <section className=\"hero is-large header-image\">\n            <div className=\"hero-head\">\n              <nav className=\"navbar\">\n                <div className=\"container\">\n                  <div className=\"navbar-brand\">\n                    <h1 className=\"brand-title\">\n                      <NavLink className=\"navbar-item\" to=\"/\">\n                        <code>minimalcss</code>\n                      </NavLink>\n                    </h1>\n\n                    <span\n                      onClick={this.toggleNavbarMenu}\n                      className={\n                        this.state.navbarMenu\n                          ? \"navbar-burger burger is-active\"\n                          : \"navbar-burger burger\"\n                      }\n                      data-target=\"navbarMenu\"\n                    >\n                      <span />\n                      <span />\n                      <span />\n                    </span>\n                  </div>\n                  <div\n                    id=\"navbarMenu\"\n                    className={\n                      this.state.navbarMenu\n                        ? \"navbar-menu is-active\"\n                        : \"navbar-menu\"\n                    }\n                  >\n                    <div className=\"navbar-end\">\n                      <NavLink\n                        to=\"/\"\n                        className=\"navbar-item\"\n                        activeClassName=\"is-active\"\n                        exact={true}\n                      >\n                        Home\n                      </NavLink>\n                      <NavLink\n                        to=\"/about\"\n                        className=\"navbar-item\"\n                        activeClassName=\"is-active\"\n                      >\n                        About minimalcss\n                      </NavLink>\n                      <span className=\"navbar-item\">\n                        <a\n                          className=\"button is-white is-outlined is-small\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href=\"https://github.com/peterbe/minimalcss-website\"\n                        >\n                          {/* <span className=\"icon\">\n                            <i className=\"fa fa-github\" />\n                          </span> */}\n                          <span>View Source</span>\n                        </a>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </nav>\n            </div>\n          </section>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route component={NoMatch} />\n          </Switch>\n\n          <footer className=\"footer\">\n            <div className=\"container\">\n              <div className=\"content has-text-centered\">\n                <p>\n                  <a href=\"https://github.com/peterbe/minimalcss-website\">\n                    minimalcss-website\n                  </a>{\" \"}\n                  uses{\" \"}\n                  <a href=\"https://github.com/peterbe/minimalcss-server\">\n                    minimalcss-server\n                  </a>{\" \"}\n                  which uses{\" \"}\n                  <a href=\"https://github.com/peterbe/minimalcss\">minimalcss</a>{\" \"}\n                  by <a href=\"https://www.peterbe.com\">@peterbe</a> and{\" \"}\n                  <a href=\"https://twitter.com/stereobooster\">@stereobooster</a>\n                  .\n                </p>\n                <p>\n                  Site design by <a href=\"https://bulma.io/\">Bulma</a> and{\" \"}\n                  <a href=\"http://html.mijnspeelplek.com/bulma1/\">\n                    Bulma Templates\n                  </a>\n                </p>\n              </div>\n            </div>\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\nfunction NoMatch({ location }) {\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              //console.log('New content is available; please refresh.');\n              console.log('New content is available; going to refresh.');\n              window.location.reload();\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bulma/css/bulma.css\";\n// import \"./Fonts.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}